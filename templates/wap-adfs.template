{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys two Web Application Proxy servers into public subnets in each availability zone, as well as two ADFS servers into the private subnets in each availability zone. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(0012)",
    "Parameters": {
        "ADServer1NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "DC1",
            "Description": "NetBIOS name of the first Active Directory server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "ADServer1PrivateIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.0.10",
            "Description": "Fixed private IP for the first Active Directory server located in Availability Zone 1",
            "Type": "String"
        },
        "ADServer2NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "DC2",
            "Description": "NetBIOS name of the second Active Directory server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "ADServer2PrivateIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.32.10",
            "Description": "Fixed private IP for the second Active Directory server located in Availability Zone 2",
            "Type": "String"
        },
        "DomainAdminPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DomainAdminUser": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "StackAdmin",
            "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "example.com",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
            "MaxLength": "25",
            "MinLength": "3",
            "Type": "String"
        },
        "DomainMemberSGID": {
            "Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "DomainNetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "example",
            "Description": "NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCCIDR": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block used by the VPC",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "WAPADFSInstanceType": {
            "AllowedValues": [
                "t2.large",
                "c4.2xlarge"
            ],
            "Default": "c4.2xlarge",
            "Description": "Amazon EC2 instance type for the WAP and ADFS Servers",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26"
            },
            "ap-northeast-1": {
                "WS2012R2": "ami-760ff517"
            },
            "ap-northeast-2": {
                "WS2012R2": "ami-f3f13b9d"
            },
            "ap-south-1": {
                "WS2012R2": "ami-cad5bfa5"
            },
            "ap-southeast-1": {
                "WS2012R2": "ami-eceb348f"
            },
            "ap-southeast-2": {
                "WS2012R2": "ami-0b497c68"
            },
            "eu-central-1": {
                "WS2012R2": "ami-3f649050"
            },
            "eu-west-1": {
                "WS2012R2": "ami-6fd5b81c"
            },
            "sa-east-1": {
                "WS2012R2": "ami-f1be299d"
            },
            "us-east-1": {
                "WS2012R2": "ami-74a73263"
            },
            "us-west-1": {
                "WS2012R2": "ami-6d0b4b0d"
            },
            "us-west-2": {
                "WS2012R2": "ami-2426e944"
            }
        }
    },
    "Resources": {
        "WAP1EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "VPCID"
            }
        },
        "WAP2EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "VPCID"
            }
        },
        "WAP1NetworkInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1ID"
                },
                "Description": "WAP1 network interface",
                "GroupSet": [
                    {
                        "Ref": "WAPSecurityGroup"
                    },
                    {
                        "Ref": "DomainMemberSGID"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "WAP1NetworkInterface"
                    }
                ]
            }
        },
        "WAP2NetworkInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2ID"
                },
                "Description": "WAP2 network interface",
                "GroupSet": [
                    {
                        "Ref": "WAPSecurityGroup"
                    },
                    {
                        "Ref": "DomainMemberSGID"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "WAP2NetworkInterface"
                    }
                ]
            }
        },
        "AssociateWAP1EIP": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "WAP1EIP",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "WAP1NetworkInterface"
                }
            }
        },
        "AssociateWAP2EIP": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "WAP2EIP",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "WAP2NetworkInterface"
                }
            }
        },
        "WAP1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "ADFS1WaitCondition",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "prep"
                        ]
                    },
                    "setup": {
                        "files": {
                            "C:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WAP1.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r WAP1",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
                            },
                            "C:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/modules/AWSQuickStart.zip"
                            },
                            "C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Join-Domain.ps1"
                            },
                            "C:\\cfn\\scripts\\Install-WAP.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/scripts/Install-WAP.ps1"
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartWaitHandle -Handle '",
                                            {
                                                "Ref": "WAP1WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "C:\\cfn\\cfn-hup.conf",
                                        "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "prep": {
                        "commands": {
                            "a-disable-win-fw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-rename-computer": {
                                "command": "powershell.exe -Command \"Rename-Computer -NewName 'WAP1' -Restart\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns-servers": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                                            {
                                                "Ref": "ADServer1PrivateIP"
                                            },
                                            ",",
                                            {
                                                "Ref": "ADServer2PrivateIP"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "d-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "e-install-wap": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WAP.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DCName '",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            "' -DomainNetBIOSName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "WAPADFSInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "WAP1NetworkInterface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WAP1"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdb",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WAP1 ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "WAP2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "ADFS1WaitCondition",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "prep"
                        ]
                    },
                    "setup": {
                        "files": {
                            "C:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WAP2.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r WAP2",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
                            },
                            "C:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/modules/AWSQuickStart.zip"
                            },
                            "C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Join-Domain.ps1"
                            },
                            "C:\\cfn\\scripts\\Install-WAP.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/scripts/Install-WAP.ps1"
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartWaitHandle -Handle '",
                                            {
                                                "Ref": "WAP2WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "C:\\cfn\\cfn-hup.conf",
                                        "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "prep": {
                        "commands": {
                            "a-disable-win-fw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-rename-computer": {
                                "command": "powershell.exe -Command \"Rename-Computer -NewName 'WAP2' -Restart\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns-servers": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                                            {
                                                "Ref": "ADServer2PrivateIP"
                                            },
                                            ",",
                                            {
                                                "Ref": "ADServer1PrivateIP"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "d-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "e-install-wap": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WAP.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DCName '",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            "' -DomainNetBIOSName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "WAPADFSInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "WAP2NetworkInterface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WAP2"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdb",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WAP2 ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "ADFS1": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "install"
                        ]
                    },
                    "setup": {
                        "files": {
                            "C:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.ADFS1.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r ADFS1",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
                            },
                            "C:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/modules/AWSQuickStart.zip"
                            },
                            "C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Join-Domain.ps1"
                            },
                            "C:\\cfn\\scripts\\Install-ADFS.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/scripts/Install-ADFS.ps1"
                            },
                            "C:\\cfn\\scripts\\Disable-AutoLogon.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Disable-AutoLogon.ps1"
                            },
                            "C:\\cfn\\scripts\\Enable-AutoLogon.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Enable-AutoLogon.ps1"
                            },
                            "C:\\cfn\\scripts\\Install.bat": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ADFS.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DCName '",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            "' -DomainNetBIOSName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "' -FirstServer\"",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartWaitHandle -Handle '",
                                            {
                                                "Ref": "ADFS1WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "C:\\cfn\\cfn-hup.conf",
                                        "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "install": {
                        "commands": {
                            "a-disable-win-fw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-rename-computer": {
                                "command": "powershell.exe -Command \"Rename-Computer -NewName 'ADFS1' -Restart\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns-servers": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                                            {
                                                "Ref": "ADServer1PrivateIP"
                                            },
                                            ",",
                                            {
                                                "Ref": "ADServer2PrivateIP"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "d-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "e-enable-autologon": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Enable-AutoLogon.ps1",
                                            " -UserName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "' -StartupScript 'C:\\cfn\\scripts\\Install.bat'",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-disable-autologon": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Disable-AutoLogon.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-wait": {
                                "command": "powershell.exe -Command \"Start-Sleep -Seconds 1800\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "WAPADFSInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "PrivateSubnet1ID"
                        },
                        "GroupSet": [
                            {
                                "Ref": "DomainMemberSGID"
                            },
                            {
                                "Ref": "ADFSSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ADFS1"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdb",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ADFS1 ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "ADFS2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "ADFS1WaitCondition",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "install"
                        ]
                    },
                    "setup": {
                        "files": {
                            "C:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.ADFS2.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r ADFS2",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
                            },
                            "C:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/modules/AWSQuickStart.zip"
                            },
                            "C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Join-Domain.ps1"
                            },
                            "C:\\cfn\\scripts\\Install-ADFS.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/scripts/Install-ADFS.ps1"
                            },
                            "C:\\cfn\\scripts\\Disable-AutoLogon.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Disable-AutoLogon.ps1"
                            },
                            "C:\\cfn\\scripts\\Enable-AutoLogon.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/wapadfs/latest/microsoft-utilities/scripts/Enable-AutoLogon.ps1"
                            },
                            "C:\\cfn\\scripts\\Install.bat": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ADFS.ps1 -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DCName '",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            "' -DomainNetBIOSName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\"",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartWaitHandle -Handle '",
                                            {
                                                "Ref": "ADFS2WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "C:\\cfn\\cfn-hup.conf",
                                        "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "install": {
                        "commands": {
                            "a-disable-win-fw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-rename-computer": {
                                "command": "powershell.exe -Command \"Rename-Computer -NewName 'ADFS2' -Restart\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-set-dns-servers": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                                            {
                                                "Ref": "ADServer2PrivateIP"
                                            },
                                            ",",
                                            {
                                                "Ref": "ADServer1PrivateIP"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "d-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "e-enable-autologon": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Enable-AutoLogon.ps1",
                                            " -UserName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "' -StartupScript 'C:\\cfn\\scripts\\Install.bat'",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                                "waitAfterCompletion": "forever"
                            },
                            "g-disable-autologon": {
                                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Disable-AutoLogon.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "h-wait": {
                                "command": "powershell.exe -Command \"Start-Sleep -Seconds 1800\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "WAPADFSInstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "PrivateSubnet2ID"
                        },
                        "GroupSet": [
                            {
                                "Ref": "DomainMemberSGID"
                            },
                            {
                                "Ref": "ADFSSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ADFS2"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdb",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ADFS2 ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "WAP1WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WAP1",
            "Properties": {
                "Handle": {
                    "Ref": "WAP1WaitHandle"
                },
                "Timeout": "3600"
            }
        },
        "WAP1WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WAP2WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WAP2",
            "Properties": {
                "Handle": {
                    "Ref": "WAP2WaitHandle"
                },
                "Timeout": "3600"
            }
        },
        "WAP2WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "ADFS1WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "ADFS1",
            "Properties": {
                "Handle": {
                    "Ref": "ADFS1WaitHandle"
                },
                "Timeout": "3600"
            }
        },
        "ADFS1WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "ADFS2WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "ADFS2",
            "Properties": {
                "Handle": {
                    "Ref": "ADFS2WaitHandle"
                },
                "Timeout": "3600"
            }
        },
        "ADFS2WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WAPSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable traffic to WAP Servers from the internet",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ADFSSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable traffic to ADFS servers",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    }
                ]
            }
        }
    }
}
